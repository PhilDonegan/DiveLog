@model ShearwaterUploadModel
@{
	ViewData["Title"] = "Shearwater Upload";
}
<h1>Shearwater Dive Upload</h1>
<p>To upload your dives to DiveLog and help the project grow please follow these simple steps</p>
<ol>
	<li>Launch Shearwater Desktop</li>
	<li>Select File -> Backup Database</li>
	<li>Save the database to a location on your PC</li>
	<li>Browse button below and select the same file</li>
	<li>Click Upload button</li>
</ol>
<p>Please note large dive databases may take a while to process > 5 minutes, please be patient.</p>

@{
	await Html.RenderPartialAsync("_FileUploaderV2");
}
@section Scripts {
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.form/4.2.1/jquery.form.js"></script>
	<script src="~/lib/signalr/signalr.js"></script>

	<script>
		$(function () {
			var options = {
				success: function (id) {
					console.log('Response=' + id);
					var connection = new signalR.HubConnectionBuilder()
						.withUrl("/jobprogress")
						.configureLogging(signalR.LogLevel.Information)
						.build();

					var value2 = 0;
					connection.on("progress",
						(parserProgress) => {
							console.log('Client: Dive:' + parserProgress.currentDive + 'of ' + parserProgress.totalDives);
							value2 = parserProgress.currentDive / parserProgress.totalDives * 100;
							$("#fileProcess").css("width", value2 + "%").text(parserProgress.currentDive + " of " + parserProgress.totalDives);
						});
					connection.start()
					.then(_ => connection.invoke("AssociateJob", id))
					.catch(err => console.error(err.toString()));

					console.log("Calling Process with id:" + id)
					$.ajax({
						type: "POST",
						contentType: "application/json",
						url: '@Url.Action("Process", "Upload")',
						data: JSON.stringify({ id: id }),
						success: function (response) {
							$("#responseText").html("Upload complete, dives will be available to search shortly.");
						}
					});

					
				},
				xhr: function () {
					// get the native XmlHttpRequest object
					var xhr = $.ajaxSettings.xhr();
					var value1 = 0;
					//set the onprogress event handler
					xhr.upload.onprogress = function (evt) {
						value1 = evt.loaded / evt.total * 100;
						console.log('progress', value1)
						$("#fileUpload").css("width", value1 + "%").text(value1 + "%");
					};
					// set the onload event handler
					xhr.upload.onload = function () { console.log('DONE!') };
					// return the customized object
					return xhr;
				}
			};
			$("#form1").ajaxForm(options);
		})
	</script>
}